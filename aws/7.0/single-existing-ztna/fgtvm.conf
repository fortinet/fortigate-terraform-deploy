Content-Type: multipart/mixed; boundary="==AWS=="
MIME-Version: 1.0

--==AWS==
Content-Type: text/x-shellscript; charset="us-ascii"
MIME-Version: 1.0

config system global
set hostname FGTVM-ztna
set admin-sport ${adminsport}
end
config system interface
edit port1
set alias public
set mode static
set ip ${port1_ip} ${port1_mask}
set allowaccess ping https ssh fgfm
next
edit port2
set alias private
set mode static
set ip ${port2_ip} ${port2_mask}
set allowaccess ping https ssh fgfm
set defaultgw disable
next
end
config firewall address
edit webserver1
set subnet ${webserver} 255.255.255.255
next
end
config firewall addrgrp
edit "Webserver"
set member "webserver1"
next
end
config user local
edit ${username}
set type password
set passwd ${password}
next
end
config user group
edit sslvpn_group
set member ${username}
next
end
config firewall vip
edit "ZTNAServer"
set type access-proxy
set extip ${port1_ip}
set extintf "port1"
set server-type https
set extport 9443
set ssl-certificate "Fortinet_Factory"
next
end
config firewall access-proxy
edit "ZTNAServer"
set client-cert disable
set vip "ZTNAServer"
config api-gateway
edit 1
config realservers
edit 1
set ip ${webserver}
next
end
next
end
next
end
config firewall proxy-policy
edit 1
set name "ZTNA Web Server"
set proxy access-proxy
set access-proxy "ZTNAServer"
set srcintf "port1"
set srcaddr "all"
set dstaddr "Webserver"
set action accept
set schedule "always"
set logtraffic all
set groups "sslvpn_group"
next
end
config authentication scheme
edit "ZTNA"
set method basic
set user-database "local-user-db"
next
end
config authentication rule
edit "ZTNA"
set srcintf "port1"
set srcaddr "all"
set ip-based disable
set active-auth-method "ZTNA"
next
end
config router static
edit 1
set device port1
set gateway ${defaultgwy}
next
end
config endpoint-control fctems
edit "ems"
set fortinetone-cloud-authentication enable
next
end


%{ if type == "byol" }
--==AWS==
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="license"

${file(license_file)}

%{ endif }
--==AWS==--
